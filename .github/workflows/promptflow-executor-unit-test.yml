name: promptflow-executor-unit-test
on:
  schedule:
    - cron: "40 19 * * *" # Every day starting at 3:40 BJT
  pull_request:
    branches: [ main ]
    paths:
      - src/promptflow/**
      - scripts/**
      - .github/workflows/promptflow-executor-unit-test.yml
  workflow_dispatch:
env:
  TENANT_ID: "${{ secrets.TENANT_ID }}"
  CLIENT_ID: "${{ secrets.CLIENT_ID }}"
  CLIENT_SECRET: "${{ secrets.CLIENT_SECRET }}"
  packageSetupType: promptflow_open_source
  testWorkingDirectory: ${{ github.workspace }}/src/promptflow
jobs:
  executor_unit_tests:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - name: checkout
      uses: actions/checkout@v3
    - name: Display and Set Environment Variables
      run: |
        if [ "ubuntu-latest" == "${{ matrix.os }}" ]; then
          export pyVersion="3.9";
        elif [ "macos-latest" == "${{ matrix.os }}" ]; then
          export pyVersion="3.10";
        else
          echo "Unsupported OS: ${{ matrix.os }}";
          exit 1;
        fi
        env | sort >> $GITHUB_OUTPUT
      id: display_env
      shell: bash -el {0}
    - name: Conda Setup - ${{ matrix.os }} - Python Version ${{ steps.display_env.outputs.pyVersion }}
      uses: "./.github/actions/step_create_conda_environment"
      with:
        pythonVersion: ${{ steps.display_env.outputs.pyVersion }}
    - name: Build wheel
      uses: "./.github/actions/step_sdk_setup"
      with:
        setupType: ${{ env.packageSetupType }}
        scriptPath: ${{ env.testWorkingDirectory }}
    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    - name: Generate Configs
      uses: "./.github/actions/step_generate_configs"
      with:
        targetFolder: ${{ env.testWorkingDirectory }}
    - name: Get number of CPU cores
      uses: SimenB/github-actions-cpu-cores@v1
      id: cpu-cores
    - name: Run Coverage Test
      shell: bash -l {0}
      working-directory: ${{ github.workspace }}
      run: |-
        set -x -e
        export IS_IN_CI_PIPELINE="true"
        az account show
        conda activate release-env
        export PYTHONPATH=${{ github.workspace }}/src/promptflow
        python scripts/building/run_coverage_tests.py \
          -p ${{ github.workspace }}/src/promptflow/promptflow \
          -t ${{ github.workspace }}/src/promptflow/tests/executor/unittests \
          -l eastus \
          -m "all" \
          -n ${{ steps.cpu-cores.outputs.count }} \
          --coverage-config ${{ github.workspace }}/src/promptflow/tests/executor/.coveragerc
    - name: Upload Test Results
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: Test Results (Python ${{ steps.display_env.outputs.pyVersion }}) (OS ${{ matrix.os }})
        path: |
          ${{ github.workspace }}/*.xml
          ${{ github.workspace }}/htmlcov/
  publish-test-results:
    name: "Publish Tests Results"
    needs: executor_unit_tests
    runs-on: ubuntu-latest
    permissions:
      checks: write
      pull-requests: write
      contents: read
      issues: read
    if: always()

    steps:
    - name: checkout
      uses: actions/checkout@v3
    - name: Publish Test Results
      uses: "./.github/actions/step_publish_test_results"
      with:
        osVersion: ubuntu-latest
        pythonVersion: 3.9
        coverageThreshold: 0.3
        token: ${{ secrets.GITHUB_TOKEN }}
